/* 
The NIST RCS (Real-time Control Systems) 
 library is public domain software, however it is preferred
 that the following disclaimers be attached.

Software Copywrite/Warranty Disclaimer

   This software was developed at the National Institute of Standards and
Technology by employees of the Federal Government in the course of their
official duties. Pursuant to title 17 Section 105 of the United States
Code this software is not subject to copyright protection and is in the
public domain. NIST Real-Time Control System software is an experimental
system. NIST assumes no responsibility whatsoever for its use by other
parties, and makes no guarantees, expressed or implied, about its
quality, reliability, or any other characteristic. We would appreciate
acknowledgement if the software is used. This software can be
redistributed and/or modified freely provided that any derivative works
bear some notice that they are derived from it, and any modified
versions bear some notice that they have been modified.



*/ 

package rcs.nml;

/*
*       Class definition for perftypeMsgDict
*       Automatically generated by RCS Java Diagnostics Tool.
*       on Wed Jul 15 13:34:26 EDT 1998
*/
class perftypeMsgDict implements NMLMessageDictionary
{

    public long getEstimatedSize(int _type) {
        return 0;
    }

    public long getMaxEstimatedSize() {
        return 0;
    }  
    
    
        // Define an object of every message class.
        NML_PERFORMANCE_TEST_MSG NML_PERFORMANCE_TEST_MSG_object = new NML_PERFORMANCE_TEST_MSG();

        // ID Type Constants
        public static final int NML_PERFORMANCE_TEST_MSG_TYPE  = 255;


        // Miscellaneous Pre-Defined Values

        // Enumerated Type Constants

        // TEST_TYPE
        public static final int CHAR_TEST=0;
        public static final int DOUBLE_TEST=4;
        public static final int FLOAT_TEST=3;
        public static final int INT_TEST=1;
        public static final int LONG_TEST=2;

        // RCS_STATUS
        public static final int RCS_DONE=1;
        public static final int RCS_ERROR=3;
        public static final int RCS_EXEC=2;
        public static final int UNINITIALIZED_STATUS=-1;


        // NML Format Function
        public int formatMsg(NMLFormatConverter nml_fc)
        {
                switch(nml_fc.msg_type)
                {
                case NML_PERFORMANCE_TEST_MSG_TYPE:
                        nml_fc.msg_to_update  = NML_PERFORMANCE_TEST_MSG_object;
                        NML_PERFORMANCE_TEST_MSG_object.update(nml_fc);
                        break;
                default:
                        return(-1);
                }
                return(0);
        }


        // NML Symbol Lookup Function
        public static String SymbolLookup(int type)
        {
                switch(type)
                {
                case NML_PERFORMANCE_TEST_MSG_TYPE:
                        return "NML_PERFORMANCE_TEST_MSG";
                default:
                        break;
                }
                return(null);
        }
}
