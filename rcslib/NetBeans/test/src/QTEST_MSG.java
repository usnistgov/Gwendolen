/*
*	New Java File starts here.
*	This file should be named QTEST_MSG.java
*	Automatically generated by NML CodeGen Java Applet.
*	from nml_test_format.hh:302
*	with command line arguments :  generate_for_all_langs=true HHFile=nml_test_format.hh
*
*	.gen script :
*		0:load nml_test_format.hh
*		1:clear
*		2:select_from_file nml_test_format.hh
*		3:generate C protos>nml_test_format_c_n.h
*		4:generate C format>nml_test_format_c_n.c
*		5:generate C update>nml_test_format_c_n.c
*		6:generate C++ protos>nml_test_format_n_codegen_protos.hh
*		7:generate C++ format>nml_test_format_n.cc
*		8:generate C++ update>nml_test_format_n.cc
*		9:generate C++ constructor>nml_test_format_n.cc
*		10:generate Java dict>nml_test_format_MsgDict.java
*		11:generate Java classes >*
*		12:generate Ada spec>nml_test_format_n_ada.ads
*		13:generate Ada body>nml_test_format_n_ada.adb
*		14:exit
*
*/

// Import all NML and posemath interfaces
import rcs.nml.*;
import rcs.posemath.*;

/*
*	Class definition for QTEST_MSG
*	Automatically generated by NML CodeGen Java Applet.
*/
public class QTEST_MSG extends NMLmsg implements Cloneable
{
	public int priority = 0;
	public int pchanges_count = 0;
	public int count = 0;
	public int pid = 0;
	public byte line[] = new byte[105];
	public double time = 0;


	// Constructor 
	public QTEST_MSG()
	{
		super(103);
		for(int i_line = 0; i_line < 105; i_line++ )
		{
			line[i_line]  = 0;
		}

	}



	// Constructor that should be used by any classes that extend this class. 
	protected QTEST_MSG(int _type)
	{
		super(_type);
		for(int i_line = 0; i_line < 105; i_line++ )
		{
			line[i_line]  = 0;
		}

	}


	public void update(NMLFormatConverter nml_fc)
	{

		nml_fc.beginClass("QTEST_MSG","NMLmsg");

		nml_fc.beginBaseClass("NMLmsg");

		super.update(nml_fc);

		nml_fc.endBaseClass("NMLmsg");
		priority = nml_fc.update_with_name("priority",priority);
		pchanges_count = nml_fc.update_with_name("pchanges_count",pchanges_count);
		count = nml_fc.update_with_name("count",count);
		pid = nml_fc.update_with_name("pid",pid);
		nml_fc.update_with_name("line",line,105);
		time = nml_fc.update_with_name("time",time);

		nml_fc.endClass("QTEST_MSG","NMLmsg");

	}


	public QTEST_MSG clone() throws CloneNotSupportedException
	{
		QTEST_MSG cloned_object = (QTEST_MSG) super.clone();
		if(this.line != null) {
			cloned_object.line = (byte []) this.line.clone();
		}
		return cloned_object;

	}
}

