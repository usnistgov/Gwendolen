/*
*	New C++ Header  File starts here.
*	This file should be named otherheader_n_codegen_protos.hh
*	Automatically generated by NML CodeGen Java Applet.
*	with command line arguments :  generate_for_all_langs=true HHFile=otherheader.hh
*
*	.gen script :
*		0:load otherheader.hh
*		1:clear
*		2:select_from_file otherheader.hh
*		3:generate C protos>otherheader_c_n.h
*		4:generate C format>otherheader_c_n.c
*		5:generate C update>otherheader_c_n.c
*		6:generate C++ protos>otherheader_n_codegen_protos.hh
*		7:generate C++ format>otherheader_n.cc
*		8:generate C++ update>otherheader_n.cc
*		9:generate C++ constructor>otherheader_n.cc
*		10:generate Java dict>otherheader_MsgDict.java
*		11:generate Java classes >*
*		12:generate Ada spec>otherheader_n_ada.ads
*		13:generate Ada body>otherheader_n_ada.adb
*		14:exit
*
*/

#ifndef otherheader_n_codegen_protos_hh_included
#define otherheader_n_codegen_protos_hh_included

// Include all NML, CMS, and RCS classes and functions
#include "rcs.hh"

// Include command and status message definitions
#include "otherheader.hh"

// Forward Function Prototypes
extern void nmlupdate(CMS *cms, struct_from_other_header *x);
extern void initialize_struct_from_other_header(struct_from_other_header *x);


 // Format function name set from common root of selected classes. (struct_from_other_header
 // You may want to add a function prototype to a header or an explicit set_format_function line to the CodeGen script to set this explicitly.

#ifndef MAX_STRUCT_FROM_OTHER_HEADER_NAME_LENGTH
#define MAX_STRUCT_FROM_OTHER_HEADER_NAME_LENGTH 1
#endif
#ifndef STRUCT_FROM_OTHER_HEADER_NAME_LIST_LENGTH
#define STRUCT_FROM_OTHER_HEADER_NAME_LIST_LENGTH 1
#endif


/* This list must be in alphabetical order and the three lists must correspond. */
extern const NMLTYPE struct_from_other_header_id_list[STRUCT_FROM_OTHER_HEADER_NAME_LIST_LENGTH];
extern const size_t struct_from_other_header_size_list[STRUCT_FROM_OTHER_HEADER_NAME_LIST_LENGTH];
extern const char struct_from_other_header_name_list[STRUCT_FROM_OTHER_HEADER_NAME_LIST_LENGTH][MAX_STRUCT_FROM_OTHER_HEADER_NAME_LENGTH];
extern const char *struct_from_other_header_symbol_lookup(long type);


// Enumerated Type Constants

extern int struct_from_other_header_format(NMLTYPE type, void *buffer, CMS *cms);

#endif
	/* # endif otherheader_n_codegen_protos_hh_included */ 

