--
--      New Ada Spec File starts here.
--      This file should be named nml_test_format_n_ada.ads
--      Automatically generated by NML CodeGen Java Applet.
--      on Wed Aug 25 09:21:03 EDT 2004
--

with Nml_Msg; use Nml_Msg;
with Cms;

-- Include other package files  that contain message definitions we might need.
with otherheader_n_ada; use otherheader_n_ada;

--      Some standard Ada Packages we always need.
with Unchecked_Deallocation;
with Unchecked_Conversion;
with Interfaces.C; use Interfaces.C;

package nml_test_format_n_ada is

        -- Create Ada versions of the Enumeration types.
        type enumtest is (
                Bad_enumtest_Value,
                b, -- 1
                a --0
                );
        type enumtest_Array is array(Integer range <>) of enumtest;

        function Format(Nml_Type : in long;
                        Msg : in NmlMsg_Access;
                        Cms_Ptr : in Cms.Cms_Access)
                                return int;

        pragma Export(C,Format,"ada_nml_test_format_n_ada_format");


        -- Redefine the C++ NML message classes as Ada Records.

        BOP_MSG_TYPE : constant := 104;

        type BOP_MSG is new NmlMsg with
                record
                        ula : Cms.Unsigned_Long_Array(1..4);
                end record;

        type BOP_MSG_Access is access all BOP_MSG;
        procedure Initialize(Msg : in out BOP_MSG);
        function NmlMsg_to_BOP_MSG is new Unchecked_Conversion(NmlMsg_Access,BOP_MSG_Access);
        procedure Update_Internal_BOP_MSG(Cms_Ptr : Cms.Cms_Access; Msg : in out BOP_MSG);
        procedure Free is new Unchecked_Deallocation(BOP_MSG,BOP_MSG_Access);
        type BOP_MSG_Array is array(Integer range <>) of BOP_MSG;

        QTEST_MSG_TYPE : constant := 103;

        type QTEST_MSG is new NmlMsg with
                record
                        priority : int;
                        pchanges_count : int;
                        count : int;
                        pid : int;
                        line : Char_Array(1..105);
                        time : double;
                end record;

        type QTEST_MSG_Access is access all QTEST_MSG;
        procedure Initialize(Msg : in out QTEST_MSG);
        function NmlMsg_to_QTEST_MSG is new Unchecked_Conversion(NmlMsg_Access,QTEST_MSG_Access);
        procedure Update_Internal_QTEST_MSG(Cms_Ptr : Cms.Cms_Access; Msg : in out QTEST_MSG);
        procedure Free is new Unchecked_Deallocation(QTEST_MSG,QTEST_MSG_Access);
        type QTEST_MSG_Array is array(Integer range <>) of QTEST_MSG;

        SIMPLER_MSG_TYPE : constant := 102;

        type SIMPLER_MSG is new NmlMsg with
                record
                        i : int;
                        cbuf : Char_Array(1..80);
                        lastvar : long;
                end record;

        type SIMPLER_MSG_Access is access all SIMPLER_MSG;
        procedure Initialize(Msg : in out SIMPLER_MSG);
        function NmlMsg_to_SIMPLER_MSG is new Unchecked_Conversion(NmlMsg_Access,SIMPLER_MSG_Access);
        procedure Update_Internal_SIMPLER_MSG(Cms_Ptr : Cms.Cms_Access; Msg : in out SIMPLER_MSG);
        procedure Free is new Unchecked_Deallocation(SIMPLER_MSG,SIMPLER_MSG_Access);
        type SIMPLER_MSG_Array is array(Integer range <>) of SIMPLER_MSG;

        TEST_MESSAGE_BASE_TYPE : constant := 100;

        type TEST_MESSAGE_BASE is new NmlMsg with
                record
                        test_message_base_var : int;
                end record;

        type TEST_MESSAGE_BASE_Access is access all TEST_MESSAGE_BASE;
        procedure Initialize(Msg : in out TEST_MESSAGE_BASE);
        function NmlMsg_to_TEST_MESSAGE_BASE is new Unchecked_Conversion(NmlMsg_Access,TEST_MESSAGE_BASE_Access);
        procedure Update_Internal_TEST_MESSAGE_BASE(Cms_Ptr : Cms.Cms_Access; Msg : in out TEST_MESSAGE_BASE);
        procedure Free is new Unchecked_Deallocation(TEST_MESSAGE_BASE,TEST_MESSAGE_BASE_Access);
        type TEST_MESSAGE_BASE_Array is array(Integer range <>) of TEST_MESSAGE_BASE;

        type c_struct is
                record
                        csc : char;
                        csi : int;
                end record;

        type c_struct_Access is access all c_struct;
        procedure Update_Internal_c_struct(Cms_Ptr : Cms.Cms_Access; Msg : in out c_struct);
        procedure Free is new Unchecked_Deallocation(c_struct,c_struct_Access);
        type c_struct_Array is array(Integer range <>) of c_struct;

        type teststruct is
                record
                        cs : c_struct;
                        b : Boolean;
                        i : int;
                        c : char;
                        f : c_float;
                        d : double;
                        bool_array : Cms.Boolean_Array(1..4);
                        ia : Cms.Int_Array(1..4);
                        ca : Char_Array(1..4);
                        fa : Cms.C_Float_Array(1..4);
                        da : Cms.Double_Array(1..4);
                        two_d_array : Cms.Double_Array(1..16);
                        three_d_array : Cms.Double_Array(1..64);
                        cda_length : int;
                        cda : Char_Array(1..8);
                        ida_length : int;
                        ida : Cms.Int_Array(1..8);
                        fda_length : int;
                        fda : Cms.C_Float_Array(1..8);
                        dda_length : int;
                        dda : Cms.Double_Array(1..8);
                        endtsbuf : Char_Array(1..16);
                end record;

        type teststruct_Access is access all teststruct;
        procedure Update_Internal_teststruct(Cms_Ptr : Cms.Cms_Access; Msg : in out teststruct);
        procedure Free is new Unchecked_Deallocation(teststruct,teststruct_Access);
        type teststruct_Array is array(Integer range <>) of teststruct;

        TEST_MESSAGE_TYPE : constant := 101;

        type TEST_MESSAGE is new NmlMsg with
                record
                        test_message_base_var : int;
                        sfoh : struct_from_other_header;
                        b : Boolean;
                        c : char;
                        d : double;
                        i : int;
                        f : c_float;
                        bool_array : Cms.Boolean_Array(1..4);
                        ia : Cms.Int_Array(1..4);
                        ca : Char_Array(1..4);
                        fa : Cms.C_Float_Array(1..4);
                        da : Cms.Double_Array(1..4);
                        two_d_array : Cms.Double_Array(1..16);
                        three_d_array : Cms.Double_Array(1..64);
                        cda_length : int;
                        cda : Char_Array(1..8);
                        ida_length : int;
                        ida : Cms.Int_Array(1..8);
                        fda_length : int;
                        fda : Cms.C_Float_Array(1..8);
                        dda_length : int;
                        dda : Cms.Double_Array(1..8);
                        s : teststruct;
                        sa : Teststruct_Array(1..4);
                        sda_length : int;
                        sda : Teststruct_Array(1..4);
                        enumtestvar : enumtest;
                        enum_array : Enumtest_Array(1..5);
                        enumtest_dla_length : int;
                        enumtest_dla : Enumtest_Array(1..7);
                        do_int_size_test : Boolean;
                        smin : short;
                        smax : short;
                        i_smin : int;
                        i_smax : int;
                        imin : int;
                        imax : int;
                        l_imin : long;
                        l_imax : long;
                        lmin : long;
                        lmax : long;
                        usmax : unsigned_short;
                        ui_usmax : unsigned;
                        uimax : unsigned;
                        ul_uimax : unsigned_long;
                        ulmax : unsigned_long;
                        d_ulmax : double;
                        d_lmin : double;
                        d_lmax : double;
                        s_array : Cms.Short_Array(1..3);
                        i_array : Cms.Int_Array(1..3);
                        l_array : Cms.Long_Array(1..3);
                        us_array : Cms.Unsigned_Short_Array(1..2);
                        ui_array : Cms.Unsigned_Array(1..2);
                        ul_array : Cms.Unsigned_Long_Array(1..2);
                        false_bool : Boolean;
                        true_bool : Boolean;
                        sminusone : short;
                        iminusone : int;
                        lminusone : long;
                        fminusone : c_float;
                        dminusone : double;
                        lastvar : long;
                end record;

        type TEST_MESSAGE_Access is access all TEST_MESSAGE;
        procedure Initialize(Msg : in out TEST_MESSAGE);
        function NmlMsg_to_TEST_MESSAGE is new Unchecked_Conversion(NmlMsg_Access,TEST_MESSAGE_Access);
        procedure Update_Internal_TEST_MESSAGE(Cms_Ptr : Cms.Cms_Access; Msg : in out TEST_MESSAGE);
        procedure Free is new Unchecked_Deallocation(TEST_MESSAGE,TEST_MESSAGE_Access);
        type TEST_MESSAGE_Array is array(Integer range <>) of TEST_MESSAGE;


end nml_test_format_n_ada;

-- End of Ada spec file  nml_test_format_n_ada.ads

