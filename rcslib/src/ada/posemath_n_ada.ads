--
--      New Ada Spec File starts here.
--      This file should be named posemath_n_ada.ads
--      Automatically generated by NML CodeGen Java Applet.
--      on Wed Aug 25 13:07:04 EDT 2004
--

with Nml_Msg;
use Nml_Msg;
with Cms;


--      Some standard Ada Packages we always need.
with Unchecked_Deallocation;
with Unchecked_Conversion;
with Interfaces.C; use Interfaces.C;

package posemath_n_ada is

        -- Create Ada versions of the Enumeration types.
        type PM_AXIS is (
                Bad_PM_AXIS_Value,
                PM_Z, -- 2
                PM_Y, -- 1
                PM_X --0
                );
        type PM_AXIS_Array is array(Integer range <>) of PM_AXIS;

        function Format(Nml_Type : in long;
                        Msg : in NmlMsg_Access;
                        Cms_Ptr : in Cms.Cms_Access)
                                return int;

        pragma Export(C,Format,"ada_posemath_n_ada_format");


        -- Redefine the C++ NML message classes as Ada Records.

        type PM_CARTESIAN is
                record
                        x : double;
                        y : double;
                        z : double;
                end record;

        type PM_CARTESIAN_Access is access all PM_CARTESIAN;
        procedure Update_Internal_PM_CARTESIAN(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_CARTESIAN);
        procedure Free is new Unchecked_Deallocation(PM_CARTESIAN,PM_CARTESIAN_Access);
        type PM_CARTESIAN_Array is array(Integer range <>) of PM_CARTESIAN;

        type PM_CYLINDRICAL is
                record
                        theta : double;
                        r : double;
                        z : double;
                end record;

        type PM_CYLINDRICAL_Access is access all PM_CYLINDRICAL;
        procedure Update_Internal_PM_CYLINDRICAL(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_CYLINDRICAL);
        procedure Free is new Unchecked_Deallocation(PM_CYLINDRICAL,PM_CYLINDRICAL_Access);
        type PM_CYLINDRICAL_Array is array(Integer range <>) of PM_CYLINDRICAL;

        type PM_EULER_ZYX is
                record
                        z : double;
                        y : double;
                        x : double;
                end record;

        type PM_EULER_ZYX_Access is access all PM_EULER_ZYX;
        procedure Update_Internal_PM_EULER_ZYX(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_EULER_ZYX);
        procedure Free is new Unchecked_Deallocation(PM_EULER_ZYX,PM_EULER_ZYX_Access);
        type PM_EULER_ZYX_Array is array(Integer range <>) of PM_EULER_ZYX;

        type PM_EULER_ZYZ is
                record
                        z : double;
                        y : double;
                        zp : double;
                end record;

        type PM_EULER_ZYZ_Access is access all PM_EULER_ZYZ;
        procedure Update_Internal_PM_EULER_ZYZ(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_EULER_ZYZ);
        procedure Free is new Unchecked_Deallocation(PM_EULER_ZYZ,PM_EULER_ZYZ_Access);
        type PM_EULER_ZYZ_Array is array(Integer range <>) of PM_EULER_ZYZ;

        type PM_QUATERNION is
                record
                        s : double;
                        x : double;
                        y : double;
                        z : double;
                end record;

        type PM_QUATERNION_Access is access all PM_QUATERNION;
        procedure Update_Internal_PM_QUATERNION(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_QUATERNION);
        procedure Free is new Unchecked_Deallocation(PM_QUATERNION,PM_QUATERNION_Access);
        type PM_QUATERNION_Array is array(Integer range <>) of PM_QUATERNION;

        type PM_ROTATION_VECTOR is
                record
                        s : double;
                        x : double;
                        y : double;
                        z : double;
                end record;

        type PM_ROTATION_VECTOR_Access is access all PM_ROTATION_VECTOR;
        procedure Update_Internal_PM_ROTATION_VECTOR(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_ROTATION_VECTOR);
        procedure Free is new Unchecked_Deallocation(PM_ROTATION_VECTOR,PM_ROTATION_VECTOR_Access);
        type PM_ROTATION_VECTOR_Array is array(Integer range <>) of PM_ROTATION_VECTOR;

        type PM_RPY is
                record
                        r : double;
                        p : double;
                        y : double;
                end record;

        type PM_RPY_Access is access all PM_RPY;
        procedure Update_Internal_PM_RPY(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_RPY);
        procedure Free is new Unchecked_Deallocation(PM_RPY,PM_RPY_Access);
        type PM_RPY_Array is array(Integer range <>) of PM_RPY;

        type PM_SPHERICAL is
                record
                        theta : double;
                        phi : double;
                        r : double;
                end record;

        type PM_SPHERICAL_Access is access all PM_SPHERICAL;
        procedure Update_Internal_PM_SPHERICAL(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_SPHERICAL);
        procedure Free is new Unchecked_Deallocation(PM_SPHERICAL,PM_SPHERICAL_Access);
        type PM_SPHERICAL_Array is array(Integer range <>) of PM_SPHERICAL;

        type PmCartesian is
                record
                        x : double;
                        y : double;
                        z : double;
                end record;

        type PmCartesian_Access is access all PmCartesian;
        procedure Update_Internal_PmCartesian(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmCartesian);
        procedure Free is new Unchecked_Deallocation(PmCartesian,PmCartesian_Access);
        type PmCartesian_Array is array(Integer range <>) of PmCartesian;

        type PmCylindrical is
                record
                        theta : double;
                        r : double;
                        z : double;
                end record;

        type PmCylindrical_Access is access all PmCylindrical;
        procedure Update_Internal_PmCylindrical(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmCylindrical);
        procedure Free is new Unchecked_Deallocation(PmCylindrical,PmCylindrical_Access);
        type PmCylindrical_Array is array(Integer range <>) of PmCylindrical;

        type PmEulerZyx is
                record
                        z : double;
                        y : double;
                        x : double;
                end record;

        type PmEulerZyx_Access is access all PmEulerZyx;
        procedure Update_Internal_PmEulerZyx(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmEulerZyx);
        procedure Free is new Unchecked_Deallocation(PmEulerZyx,PmEulerZyx_Access);
        type PmEulerZyx_Array is array(Integer range <>) of PmEulerZyx;

        type PmEulerZyz is
                record
                        z : double;
                        y : double;
                        zp : double;
                end record;

        type PmEulerZyz_Access is access all PmEulerZyz;
        procedure Update_Internal_PmEulerZyz(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmEulerZyz);
        procedure Free is new Unchecked_Deallocation(PmEulerZyz,PmEulerZyz_Access);
        type PmEulerZyz_Array is array(Integer range <>) of PmEulerZyz;

        type PmQuaternion is
                record
                        s : double;
                        x : double;
                        y : double;
                        z : double;
                end record;

        type PmQuaternion_Access is access all PmQuaternion;
        procedure Update_Internal_PmQuaternion(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmQuaternion);
        procedure Free is new Unchecked_Deallocation(PmQuaternion,PmQuaternion_Access);
        type PmQuaternion_Array is array(Integer range <>) of PmQuaternion;

        type PmRotationVector is
                record
                        s : double;
                        x : double;
                        y : double;
                        z : double;
                end record;

        type PmRotationVector_Access is access all PmRotationVector;
        procedure Update_Internal_PmRotationVector(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmRotationVector);
        procedure Free is new Unchecked_Deallocation(PmRotationVector,PmRotationVector_Access);
        type PmRotationVector_Array is array(Integer range <>) of PmRotationVector;

        type PmRpy is
                record
                        r : double;
                        p : double;
                        y : double;
                end record;

        type PmRpy_Access is access all PmRpy;
        procedure Update_Internal_PmRpy(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmRpy);
        procedure Free is new Unchecked_Deallocation(PmRpy,PmRpy_Access);
        type PmRpy_Array is array(Integer range <>) of PmRpy;

        type PmSpherical is
                record
                        theta : double;
                        phi : double;
                        r : double;
                end record;

        type PmSpherical_Access is access all PmSpherical;
        procedure Update_Internal_PmSpherical(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmSpherical);
        procedure Free is new Unchecked_Deallocation(PmSpherical,PmSpherical_Access);
        type PmSpherical_Array is array(Integer range <>) of PmSpherical;

        type PM_CIRCLE is
                record
                        center : PM_CARTESIAN;
                        normal : PM_CARTESIAN;
                        rTan : PM_CARTESIAN;
                        rPerp : PM_CARTESIAN;
                        rHelix : PM_CARTESIAN;
                        radius : double;
                        angle : double;
                        spiral : double;
                end record;

        type PM_CIRCLE_Access is access all PM_CIRCLE;
        procedure Update_Internal_PM_CIRCLE(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_CIRCLE);
        procedure Free is new Unchecked_Deallocation(PM_CIRCLE,PM_CIRCLE_Access);
        type PM_CIRCLE_Array is array(Integer range <>) of PM_CIRCLE;

        type PM_POSE is
                record
                        tran : PM_CARTESIAN;
                        rot : PM_QUATERNION;
                end record;

        type PM_POSE_Access is access all PM_POSE;
        procedure Update_Internal_PM_POSE(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_POSE);
        procedure Free is new Unchecked_Deallocation(PM_POSE,PM_POSE_Access);
        type PM_POSE_Array is array(Integer range <>) of PM_POSE;

        type PM_ROTATION_MATRIX is
                record
                        x : PM_CARTESIAN;
                        y : PM_CARTESIAN;
                        z : PM_CARTESIAN;
                end record;

        type PM_ROTATION_MATRIX_Access is access all PM_ROTATION_MATRIX;
        procedure Update_Internal_PM_ROTATION_MATRIX(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_ROTATION_MATRIX);
        procedure Free is new Unchecked_Deallocation(PM_ROTATION_MATRIX,PM_ROTATION_MATRIX_Access);
        type PM_ROTATION_MATRIX_Array is array(Integer range <>) of PM_ROTATION_MATRIX;

        type PmCircle is
                record
                        center : PmCartesian;
                        normal : PmCartesian;
                        rTan : PmCartesian;
                        rPerp : PmCartesian;
                        rHelix : PmCartesian;
                        radius : double;
                        angle : double;
                        spiral : double;
                end record;

        type PmCircle_Access is access all PmCircle;
        procedure Update_Internal_PmCircle(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmCircle);
        procedure Free is new Unchecked_Deallocation(PmCircle,PmCircle_Access);
        type PmCircle_Array is array(Integer range <>) of PmCircle;

        type PmPose is
                record
                        tran : PmCartesian;
                        rot : PmQuaternion;
                end record;

        type PmPose_Access is access all PmPose;
        procedure Update_Internal_PmPose(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmPose);
        procedure Free is new Unchecked_Deallocation(PmPose,PmPose_Access);
        type PmPose_Array is array(Integer range <>) of PmPose;

        type PmRotationMatrix is
                record
                        x : PmCartesian;
                        y : PmCartesian;
                        z : PmCartesian;
                end record;

        type PmRotationMatrix_Access is access all PmRotationMatrix;
        procedure Update_Internal_PmRotationMatrix(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmRotationMatrix);
        procedure Free is new Unchecked_Deallocation(PmRotationMatrix,PmRotationMatrix_Access);
        type PmRotationMatrix_Array is array(Integer range <>) of PmRotationMatrix;

        type PM_HOMOGENEOUS is
                record
                        tran : PM_CARTESIAN;
                        rot : PM_ROTATION_MATRIX;
                end record;

        type PM_HOMOGENEOUS_Access is access all PM_HOMOGENEOUS;
        procedure Update_Internal_PM_HOMOGENEOUS(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_HOMOGENEOUS);
        procedure Free is new Unchecked_Deallocation(PM_HOMOGENEOUS,PM_HOMOGENEOUS_Access);
        type PM_HOMOGENEOUS_Array is array(Integer range <>) of PM_HOMOGENEOUS;

        type PM_LINE is
                record
                        start : PM_POSE;
                        End_Var : PM_POSE;
                        uVec : PM_CARTESIAN;
                end record;

        type PM_LINE_Access is access all PM_LINE;
        procedure Update_Internal_PM_LINE(Cms_Ptr : in Cms.Cms_Access; Msg : in out PM_LINE);
        procedure Free is new Unchecked_Deallocation(PM_LINE,PM_LINE_Access);
        type PM_LINE_Array is array(Integer range <>) of PM_LINE;

        type PmHomogeneous is
                record
                        tran : PmCartesian;
                        rot : PmRotationMatrix;
                end record;

        type PmHomogeneous_Access is access all PmHomogeneous;
        procedure Update_Internal_PmHomogeneous(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmHomogeneous);
        procedure Free is new Unchecked_Deallocation(PmHomogeneous,PmHomogeneous_Access);
        type PmHomogeneous_Array is array(Integer range <>) of PmHomogeneous;

        type PmLine is
                record
                        start : PmPose;
                        End_Var : PmPose;
                        uVec : PmCartesian;
                        qVec : PmQuaternion;
                        tmag : double;
                        rmag : double;
                        tmag_is_greater_than_rmag : int;
                        tmag_zero : int;
                        rmag_zero : int;
                end record;

        type PmLine_Access is access all PmLine;
        procedure Update_Internal_PmLine(Cms_Ptr : in Cms.Cms_Access; Msg : in out PmLine);
        procedure Free is new Unchecked_Deallocation(PmLine,PmLine_Access);
        type PmLine_Array is array(Integer range <>) of PmLine;


end posemath_n_ada;

-- End of Ada spec file  posemath_n_ada.ads

