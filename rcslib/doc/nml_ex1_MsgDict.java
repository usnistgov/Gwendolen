/*
*	New Java File starts here.
*	This file should be named nml_ex1_MsgDict.java
*	Automatically generated by NML CodeGen Java Applet.
*	with command line arguments :  generate_for_java=true generate_for_cpp=false HHFile=/home/shackle/nml_ex1.hh
*	RCS_VERSION=2009.12.17_1575*
*	.gen script :
*		0:load /home/shackle/nml_ex1.hh
*		1:clear
*		2:select_from_file /home/shackle/nml_ex1.hh
*		3:generate Java dict>/home/shackle/nml_ex1_MsgDict.java
*		4:generate Java classes >*
*		5:exit
*
*/

// Import NML classes and interfaces
import rcs.nml.*;

import java.util.Hashtable;
/*
*	Class definition for nml_ex1_MsgDict
*	Automatically generated by NML CodeGen Java Applet.
*/
public class nml_ex1_MsgDict implements NMLMessageDictionary
{

	// Define an object of every message class.
	private EXAMPLE_MSG EXAMPLE_MSG_object = null;

	// ID Type Constants
	public static final int EXAMPLE_MSG_TYPE  = 101;

	// Sizes useful for C++ compat and preallocating byte storage. 
	//(not used for normal NML reads/writes).
	public long getEstimatedSize(final int _type)
	{
		switch(_type)
		{
			case EXAMPLE_MSG_TYPE: /*101*/
				return 232;
		default:
			break;
		}
		return 232; /* maximum */
	}

	public long getMaxEstimatedSize() {
		return 232;
	}



	//Define an NML_ENUM_INFO object for the type ID's
	NML_ENUM_INFO nml_enum_info_for_type_names =null;


	//Create a constructor to setup the NML_ENUM_INFO object.
	public nml_ex1_MsgDict()
	{
		nml_enum_info_for_type_names= new NML_ENUM_INFO();
		nml_enum_info_for_type_names.name="nml_ex1_MsgDict";
		Hashtable h1 = new Hashtable();
		Hashtable h2 = new Hashtable();
		Integer I = null;
		String  S = null;
		I=new Integer(EXAMPLE_MSG_TYPE);
		S="EXAMPLE_MSG";
		h1.put(I,S); h2.put(S,I);
		nml_enum_info_for_type_names.int_to_string_hash=h1;
		nml_enum_info_for_type_names.string_to_int_hash=h2;
	}



	// Miscellaneous Pre-Defined Values

	// Enumerated Type Constants


	// NML Format Function
	public int formatMsg(NMLFormatConverter nml_fc)
	{
		int return_val=0;
		nml_fc.check_type_info(nml_enum_info_for_type_names);

		switch(nml_fc.msg_type)
		{
		case EXAMPLE_MSG_TYPE: /*101*/
			if(null == EXAMPLE_MSG_object) { 
				EXAMPLE_MSG_object = new EXAMPLE_MSG();
			}
			nml_fc.msg_to_update  = EXAMPLE_MSG_object;
			EXAMPLE_MSG_object.update(nml_fc);
			break;

		default:
			return_val=-1;
			break;
		}
		return(return_val);
	}

}
