/*
*	New C++ File starts here.
*	This file should be named exCmd.cc
*	Automatically generated by NML CodeGen Java Applet.
*	with command line arguments :  HHFile=exCmd.hh
*	RCS_VERSION=@(#) RCS_LIBRARY_VERSION: 2009.01.26_1339 Compiled on Fri Feb  6 08:31:09 EST 2009 for the java platform.
*	$Id: CodeGenCommon.java 1341 2009-02-05 21:22:54Z shackle $
*
*	.gen script :
*		0:load exCmd.hh
*		1:clear
*		2:select_from_file exCmd.hh
*		3:generate C++ protos>exCmd_n_codegen_protos.hh
*		4:generate C++ format>exCmd_n.cc
*
*/

// Include all NML, CMS, and RCS classes and functions
#include "rcs.hh"

// Include command and status message definitions
#include "exCmd.hh"

// Include externally supplied prototypes
#include "exCmd_n_codegen_protos.hh"



#ifndef EXCMD_NAME_LIST_LENGTH
#define EXCMD_NAME_LIST_LENGTH 5
#endif

const NMLTYPE exCmd_id_list[EXCMD_NAME_LIST_LENGTH]= {
	EX_CONFIG_TYPE, /* 0,6001 */
	EX_GOTO_POINT_TYPE, /* 1,6002 */
	EX_HALT_TYPE, /* 2,6003 */
	EX_INIT_TYPE, /* 3,6004 */
	-1};
const size_t exCmd_size_list[EXCMD_NAME_LIST_LENGTH]= {
	sizeof(EX_CONFIG),
	sizeof(EX_GOTO_POINT),
	sizeof(EX_HALT),
	sizeof(EX_INIT),
	0};


// Enumerated Type Constants

/*
Estimated_size	EX_CONFIG	24
Estimated_size	EX_GOTO_POINT	48
Estimated_size	EX_HALT	24
Estimated_size	EX_INIT	24
Estimated_size	MAXIMUM	48
*/
/*
*	NML/CMS Format function : exCmd_format
*/
int exCmd_format(NMLTYPE type, void *buffer, CMS *cms)
{

	type = cms->check_type_info(type,buffer,"exCmd",
		(cms_symbol_lookup_function_t) 0,
		(const char **) 0,
		exCmd_id_list,exCmd_size_list,
		EXCMD_NAME_LIST_LENGTH,
		0);

	switch(type)
	{
	case EX_CONFIG_TYPE:
		((EX_CONFIG *) buffer)->update(cms);
		break;
	case EX_GOTO_POINT_TYPE:
		((EX_GOTO_POINT *) buffer)->update(cms);
		break;
	case EX_HALT_TYPE:
		((EX_HALT *) buffer)->update(cms);
		break;
	case EX_INIT_TYPE:
		((EX_INIT *) buffer)->update(cms);
		break;

	default:
		return(0);
	}
	return 1;
}

/*
*	NML/CMS Update function for EX_CONFIG
*	from exCmd.hh:0
*/
void EX_CONFIG::update(CMS *cms)
{

	cms->beginClass("EX_CONFIG","RCS_CMD_MSG");
	RCS_CMD_MSG::update_cmd_msg_base(cms);

	cms->endClass("EX_CONFIG","RCS_CMD_MSG");

}


/*
*	NML/CMS Update function for EX_GOTO_POINT
*	from exCmd.hh:31
*/
void EX_GOTO_POINT::update(CMS *cms)
{

	cms->beginClass("EX_GOTO_POINT","RCS_CMD_MSG");
	RCS_CMD_MSG::update_cmd_msg_base(cms);
	cms->update_with_name("point",point);

	cms->endClass("EX_GOTO_POINT","RCS_CMD_MSG");

}


/*
*	NML/CMS Update function for EX_HALT
*	from exCmd.hh:46
*/
void EX_HALT::update(CMS *cms)
{

	cms->beginClass("EX_HALT","RCS_CMD_MSG");
	RCS_CMD_MSG::update_cmd_msg_base(cms);

	cms->endClass("EX_HALT","RCS_CMD_MSG");

}


/*
*	NML/CMS Update function for EX_INIT
*	from exCmd.hh:60
*/
void EX_INIT::update(CMS *cms)
{

	cms->beginClass("EX_INIT","RCS_CMD_MSG");
	RCS_CMD_MSG::update_cmd_msg_base(cms);

	cms->endClass("EX_INIT","RCS_CMD_MSG");

}

/*
*	Constructor for EX_CONFIG
*	from exCmd.hh:0
*/
EX_CONFIG::EX_CONFIG()
	: RCS_CMD_MSG(EX_CONFIG_TYPE,sizeof(EX_CONFIG))
{

}

/*
*	Constructor for EX_GOTO_POINT
*	from exCmd.hh:31
*/
EX_GOTO_POINT::EX_GOTO_POINT()
	: RCS_CMD_MSG(EX_GOTO_POINT_TYPE,sizeof(EX_GOTO_POINT))
{

}

/*
*	Constructor for EX_HALT
*	from exCmd.hh:46
*/
EX_HALT::EX_HALT()
	: RCS_CMD_MSG(EX_HALT_TYPE,sizeof(EX_HALT))
{

}

/*
*	Constructor for EX_INIT
*	from exCmd.hh:60
*/
EX_INIT::EX_INIT()
	: RCS_CMD_MSG(EX_INIT_TYPE,sizeof(EX_INIT))
{

}

