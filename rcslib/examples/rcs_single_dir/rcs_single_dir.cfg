
// This configuration file is used by the RCS Design and Diagnostics tools.
// The format is similar to C++.
// Sections are delimited with curly braces "{}".
// Most sections correspond to modules but the options section is unique..
// Inividual variables are delimited with semicolons ";".
// Comments can be started with double forward // and continue to the end of the line

options{
	AppDir="/home/shackle/rcslib/examples/rcs_single_dir"; 	// Directories where final installs should go.
	AppName="rcs_single_dir"; 	//Name for the entire application.
	CppExt=".cc"; 	//File extension for C++ source files.
	HppExt=".hh"; 	//File extension for C++ header files.
	ObjExt=".o"; 	//File extension for object files.
	RcsLibDir="../.."; 	//Directory where the RCS Library was installed.
	TerminalCommand="xterm -sb -sl 1000 -e ./.ec "; // Command to start a new graphical terminal.
	MakeCommand="make ";
	ListModulesByNumber=true;
	MODULE_WIDTH=160;
	MODULE_HEIGHT=60;
	MODULE_X_SPACING=50;
	MODULE_Y_SPACING=40;
	VCT="NONE";
	AutoCheckin=false;
	AutoCheckout=false;
}

bgprimservosvr{
	is_server=true;
	host="localhost";
	buf="bg_cmd";
	buf="bg_sts";
	buf="errlog";
	buf="pose_data";
	buf="prim_cmd";
	buf="prim_sts";
	buf="servo_cmd";
	buf="servo_sts";
}


rcs_single_dirsvr{
	is_server=true;
	host="localhost";
	buf="bg_cmd";
	buf="bg_sts";
	buf="prim_cmd";
	buf="prim_sts";
	buf="robot_super_cmd";
	buf="robot_super_sts";
	buf="servo_cmd";
	buf="servo_sts";
	buf="sp_cmd";
	buf="sp_sts";
	buf="wm_cmd";
	buf="wm_sts";
	buf="errlog";
	buf="pose_data";
	buf="obstacle_map";
	buf="sensor_data";
	buf="bg_cmd";
	buf="bg_sts";
	buf="errlog";
	buf="obstacle_map";
	buf="pose_data";
	buf="prim_cmd";
	buf="prim_sts";
	buf="robot_super_cmd";
	buf="robot_super_sts";
	buf="sensor_data";
	buf="servo_cmd";
	buf="servo_sts";
	buf="sp_cmd";
	buf="sp_sts";
	buf="wm_cmd";
	buf="wm_sts";
}


robot_supersvr{
	is_server=true;
	host="localhost";
	buf="robot_super_cmd";
	buf="robot_super_sts";
}


spsvr{
	is_server=true;
	host="localhost";
	buf="sensor_data";
	buf="sp_cmd";
	buf="sp_sts";
}


wmsvr{
	is_server=true;
	host="localhost";
	buf="obstacle_map";
	buf="wm_cmd";
	buf="wm_sts";
}



wm{
	cmd_types="wmn.hh";
	stat_types="wmn.hh";
	stat_buffer_name="wm_sts";
	cmd_buffer_name="wm_cmd";
	nml_configuration_file="rcs_single_dir.nml";
	class_name="WM_MODULE";
	MainLoopName="wm";
	cycle_time=0.1;
	host=localhost;
	update_next_aux_every_cycle=true;
	aux_output="obstacle_map";
	aux_output_types="obstacle_mapn.hh";
	update_next_aux_every_cycle=true;
	pre_defined_types="offsets.hh";
	aux_input="sensor_data";
	aux_input_types="sensor_datan.hh";
	update_next_aux_every_cycle=true;
	aux_input="pose_data";
	aux_input_types="pose_datan.hh";
	release_library="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/lib/librcs_single_dir.a";
	release_include_dir="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/include";
	module_number=2;
}


bg{
	child="prim";
	cmd_types="bgn.hh";
	stat_types="bgn.hh";
	stat_buffer_name="bg_sts";
	cmd_buffer_name="bg_cmd";
	nml_configuration_file="rcs_single_dir.nml";
	class_name="BG_MODULE";
	MainLoopName="bg";
	cycle_time=0.1;
	host=localhost;
	update_next_aux_every_cycle=true;
	aux_input="pose_data";
	aux_input_types="pose_datan.hh";
	update_next_aux_every_cycle=true;
	aux_input="obstacle_map";
	aux_input_types="obstacle_mapn.hh";
	release_library="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/lib/librcs_single_dir.a";
	release_include_dir="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/include";
	module_number=3;
}

prim{
	child="servo";
	cmd_types="primn.hh";
	stat_types="primn.hh";
	stat_buffer_name="prim_sts";
	cmd_buffer_name="prim_cmd";
	nml_configuration_file="rcs_single_dir.nml";
	class_name="PRIM_MODULE";
	MainLoopName="prim";
	cycle_time=0.05;
	host=localhost;
	update_next_aux_every_cycle=true;
	aux_input="pose_data";
	aux_input_types="pose_datan.hh";
	release_library="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/lib/librcs_single_dir.a";
	release_include_dir="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/include";
	module_number=4;
}

robot_super{
	child="bg";
	child="sp";
	child="wm";
	cmd_types="robot_supern.hh";
	stat_types="robot_supern.hh";
	stat_buffer_name="robot_super_sts";
	cmd_buffer_name="robot_super_cmd";
	nml_configuration_file="rcs_single_dir.nml";
	class_name="ROBOT_SUPER_MODULE";
	MainLoopName="robot_super";
	cycle_time=0.1;
	host=localhost;
	update_next_aux_every_cycle=true;
	aux_input="pose_data";
	aux_input_types="pose_datan.hh";
	release_library="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/lib/librcs_single_dir.a";
	release_include_dir="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/include";
	module_number=5;
}

servo{
	pre_defined_types="offsets.hh";
	cmd_types="servon.hh";
	stat_types="servon.hh";
	stat_buffer_name="servo_sts";
	cmd_buffer_name="servo_cmd";
	nml_configuration_file="rcs_single_dir.nml";
	class_name="SERVO_MODULE";
	MainLoopName="servo";
	cycle_time=0.01;
	host=localhost;
	update_next_aux_every_cycle=true;
	aux_output="pose_data";
	aux_output_types="pose_datan.hh";
	release_library="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/lib/librcs_single_dir.a";
	release_include_dir="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/include";
	module_number=6;
	aux_output="servo_stat_cfg";
	aux_output_types="servo_stat_cfgn.hh";
	aux_output="servo_cmd_set";
	aux_output_types="servo_cmd_setn.hh";
}


sp{
	cmd_types="spn.hh";
	stat_types="spn.hh";
	stat_buffer_name="sp_sts";
	cmd_buffer_name="sp_cmd";
	nml_configuration_file="rcs_single_dir.nml";
	class_name="SP_MODULE";
	MainLoopName="sp";
	cycle_time=0.1;
	host=localhost;
	update_next_aux_every_cycle=true;
	pre_defined_types="offsets.hh";
	aux_output="sensor_data";
	aux_output_types="sensor_datan.hh";
	update_next_aux_every_cycle=true;
	aux_input="pose_data";
	aux_input_types="pose_datan.hh";
	release_library="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/lib/librcs_single_dir.a";
	release_include_dir="/home/shackle/rcslib/examples/rcs_single_dir/plat/$(PLAT)/include";
	module_number=1;
}
