/*
*	New Java File starts here.
*	This file should be named EXAMPLE_MSG.java
*	Automatically generated by NML CodeGen Java Applet.
*	from nml_ex1.hh:0
*	with command line arguments :  generate_for_all_langs=true HHFile=nml_ex1.hh
*
*	.gen script :
*		0:load nml_ex1.hh
*		1:clear
*		2:select_from_file nml_ex1.hh
*		3:generate C protos>nml_ex1_c_n.h
*		4:generate C format>nml_ex1_c_n.c
*		5:generate C update>nml_ex1_c_n.c
*		6:generate C++ protos>nml_ex1_n_codegen_protos.hh
*		7:generate C++ format>nml_ex1_n.cc
*		8:generate C++ update>nml_ex1_n.cc
*		9:generate C++ constructor>nml_ex1_n.cc
*		10:generate Java dict>nml_ex1_MsgDict.java
*		11:generate Java classes >*
*		12:generate Ada spec>nml_ex1_n_ada.ads
*		13:generate Ada body>nml_ex1_n_ada.adb
*		14:exit
*
*/

// Import all NML and posemath interfaces
import rcs.nml.*;
import rcs.posemath.*;

/*
*	Class definition for EXAMPLE_MSG
*	Automatically generated by NML CodeGen Java Applet.
*/
public class EXAMPLE_MSG extends NMLmsg implements Cloneable
{
	public double d = 0;
	public float f = 0;
	public byte c = 0;
	public short s = 0;
	public int i = 0;
	public long l = 0;
	public byte uc = 0;
	public short us = 0;
	public int ui = 0;
	public long ul = 0;
	public int da_length = 0;
	public double da[] = new double[20]; /* NML_DYNAMIC_LENGTH_ARRAY */


	// Constructor 
	public EXAMPLE_MSG()
	{
		super(101);
		for(int i_da = 0; i_da < 20; i_da++ )
		{
			da[i_da]  = 0;
		}

	}



	// Constructor that should be used by any classes that extend this class. 
	protected EXAMPLE_MSG(int _type)
	{
		super(_type);
		for(int i_da = 0; i_da < 20; i_da++ )
		{
			da[i_da]  = 0;
		}

	}


	public void update(NMLFormatConverter nml_fc)
	{

		nml_fc.beginClass("EXAMPLE_MSG","NMLmsg");

		nml_fc.beginBaseClass("NMLmsg");

		super.update(nml_fc);

		nml_fc.endBaseClass("NMLmsg");
		d = nml_fc.update_with_name("d",d);
		f = nml_fc.update_with_name("f",f);
		c = nml_fc.update_with_name("c",c);
		s = nml_fc.update_with_name("s",s);
		i = nml_fc.update_with_name("i",i);
		l = nml_fc.update_with_name("l",l);
		uc = nml_fc.update_unsigned_with_name("uc",uc);
		us = nml_fc.update_unsigned_with_name("us",us);
		ui = nml_fc.update_unsigned_with_name("ui",ui);
		ul = nml_fc.update_unsigned_with_name("ul",ul);
		da_length = nml_fc.update_dla_length_with_name("da_length",da_length);
		nml_fc.update_with_name("da",da,da_length);

		nml_fc.endClass("EXAMPLE_MSG","NMLmsg");

	}


	public EXAMPLE_MSG clone() throws CloneNotSupportedException
	{
		EXAMPLE_MSG cloned_object = (EXAMPLE_MSG) super.clone();
		if(this.da != null) {
			cloned_object.da = (double []) this.da.clone();
		}
		return cloned_object;

	}


	/* Getters and Setters */
	public double getd() {
		return (d);
	}
	public void setd(double _d)  {
		this.d=_d;
	}

	public float getf() {
		return (f);
	}
	public void setf(float _f)  {
		this.f=_f;
	}

	public byte getc() {
		return (c);
	}
	public void setc(byte _c)  {
		this.c=_c;
	}

	public short gets() {
		return (s);
	}
	public void sets(short _s)  {
		this.s=_s;
	}

	public int geti() {
		return (i);
	}
	public void seti(int _i)  {
		this.i=_i;
	}

	public long getl() {
		return (l);
	}
	public void setl(long _l)  {
		this.l=_l;
	}

	public byte getuc() {
		return (uc);
	}
	public void setuc(byte _uc)  {
		this.uc=_uc;
	}

	public short getus() {
		return (us);
	}
	public void setus(short _us)  {
		this.us=_us;
	}

	public int getui() {
		return (ui);
	}
	public void setui(int _ui)  {
		this.ui=_ui;
	}

	public long getul() {
		return (ul);
	}
	public void setul(long _ul)  {
		this.ul=_ul;
	}

	public int getda_length() {
		return (da_length);
	}
	public void setda_length(int _da_length)  {
		this.da_length=_da_length;
	}

	public double [] getda() {
		return (da);
	}
	public void setda(double [] _da)  {
		this.da=_da;
	}


}

