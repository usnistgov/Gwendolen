//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.09.21 at 09:41:19 AM EDT 
//


package crcl.base;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 *                 MoveThroughToType is derived from MiddleCommandType. 
 *                 An instance of MoveThroughToType has the following elements:
 *                 Name (inherited, optional)
 *                 CommandID (inherited)
 *                 MoveStraight
 *                 Waypoint (multiple)
 *                 NumPositions.
 * 
 *                 Each Waypoint before the last is a Pose that the robot should move
 *                 through. The last Waypoint is the Pose the robot should be in after
 *                 the command is fully executed. NumPositions is the number of
 *                 instances of the Waypoint element. The robot must pass each point
 *                 within the tolerance established (1) by the tolerance given for the
 *                 pose in the Waypoint, if there is a tolerance in the Waypoint, or
 *                 if not (2) by the most recently executed instance of
 *                 SetIntermediatePoseToleranceType (or by SetEndPoseToleranceType for
 *                 the final Waypoint). The speed and acceleration to use are set
 *                 either in the Waypoint or by previously executed CRCL commands.
 * 
 *                 If the value of MoveStraight is true, the controlled point must be
 *                 moved in a straight line between Waypoints. If the value of
 *                 MoveStraight is false, the controlled point may be moved along any
 *                 convenient trajectory between Waypoints. In either case, there are
 *                 no restrictions on the values of XAxis and ZAxis between waypoints.
 * 
 *                 The type of each Waypoint may be either PoseType or
 *                 PoseAndSetType, which is derived from PoseType.
 *             
 * 
 * <p>Java class for MoveThroughToType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MoveThroughToType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{}MiddleCommandType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="MoveStraight" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="Waypoint" type="{}PoseType" maxOccurs="unbounded" minOccurs="2"/&gt;
 *         &lt;element name="NumPositions" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MoveThroughToType", propOrder = {
    "moveStraight",
    "waypoint",
    "numPositions"
})
public class MoveThroughToType
    extends MiddleCommandType
{

    @XmlElement(name = "MoveStraight")
    protected boolean moveStraight;
    @XmlElement(name = "Waypoint", required = true)
    protected List<PoseType> waypoint;
    @XmlElement(name = "NumPositions")
    protected int numPositions;

    /**
     * Gets the value of the moveStraight property.
     * 
     */
    public boolean isMoveStraight() {
        return moveStraight;
    }

    /**
     * Sets the value of the moveStraight property.
     * 
     */
    public void setMoveStraight(boolean value) {
        this.moveStraight = value;
    }

    /**
     * Gets the value of the waypoint property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the waypoint property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWaypoint().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PoseType }
     * 
     * 
     */
    public List<PoseType> getWaypoint() {
        if (waypoint == null) {
            waypoint = new ArrayList<PoseType>();
        }
        return this.waypoint;
    }

    /**
     * Gets the value of the numPositions property.
     * 
     */
    public int getNumPositions() {
        return numPositions;
    }

    /**
     * Sets the value of the numPositions property.
     * 
     */
    public void setNumPositions(int value) {
        this.numPositions = value;
    }

}
